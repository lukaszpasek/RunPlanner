@{
    var geoJsonData = ViewData["GeoJSONData"];
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Display GeoJSON Route on HERE Maps</title>
    <link rel="stylesheet" href="https://js.api.here.com/v3/3.1/mapsjs-ui.css" />
    <script src="https://js.api.here.com/v3/3.1/mapsjs-core.js"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-service.js"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-ui.js"></script>
    <script src="https://js.api.here.com/v3/3.1/mapsjs-mapevents.js"></script>

</head>

<body>
    @Html.Partial("~/Views/Shared/_Menu.cshtml")
    <div id="map"></div>

    <script>
        var map;
        var routeGroup;
        var bubble;
        var ui;
        observeChanges(window, 'geoJsonData', loadMap);
        function initMap() {
            var platform = new H.service.Platform({
                'apikey': 'HzW4KiCMacI7o3NX3s90rNWk05a_raVDbvl7RuKDesI'
            });

            map = new H.Map(document.getElementById('map'), platform.createDefaultLayers().vector.normal.map, {
                center: { lat: 52.23, lng: 21 },
                zoom: 16
            });

            var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));

            ui = H.ui.UI.createDefault(map, platform.createDefaultLayers());
            routeGroup = new H.map.Group();
            map.addObject(routeGroup);
            var geoJsonData = @Html.Raw(Json.Serialize(geoJsonData));
            displayGeoJsonRoute(geoJsonData);
        }

        function displayGeoJsonRoute(geoJsonData) {
            map.removeObjects(map.getObjects());

            var routeGroup = new H.map.Group();

            var lineString = new H.geo.LineString();

            geoJsonData.features[0].geometry.coordinates.forEach(function (coord) {
                lineString.pushLatLngAlt(coord[1], coord[0]);
            });

            var routeLine = new H.map.Polyline(lineString, {
                style: { strokeColor: '#0000FF', lineWidth: 6 }
            });

            routeGroup.addObject(routeLine);
            map.addObject(routeGroup);

            var finishPoint = new H.map.Marker({
                lat: geoJsonData.features[0].geometry.coordinates[geoJsonData.features[0].geometry.coordinates.length - 1][1],
                lng: geoJsonData.features[0].geometry.coordinates[geoJsonData.features[0].geometry.coordinates.length - 1][0]
            });

            finishPoint.addEventListener('pointerenter', function (event) {
                var coords = map.screenToGeo(event.currentPointer.viewportX, event.currentPointer.viewportY);
                var bubble = new H.ui.InfoBubble(coords, {
                    content: 'Description: ' + geoJsonData.features[0].properties.name
                });
                ui.addBubble(bubble);
            });

            finishPoint.addEventListener('pointerleave', function () {
                ui.getBubbles().forEach(function (bubble) {
                    ui.removeBubble(bubble);
                });
            });

            map.addObject(finishPoint);
            map.getViewModel().setLookAtData({
                bounds: routeGroup.getBoundingBox()
            });
        }
        window.onload = initMap;
    </script>
</body>

</html>
