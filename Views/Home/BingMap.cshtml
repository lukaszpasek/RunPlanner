@{
    var geoJsonData = ViewData["GeoJSONData"];
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Display GeoJSON Route on Bing Maps</title>
    <script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?key=AkOaQu2DLHmVfkRSMITNik0HozZniajnvTQXRtDJsthVQwzJs8bZPtdEUGraXsHy'></script>
</head>

<body>
    @Html.Partial("~/Views/Shared/_Menu.cshtml")
    <div id="map"></div>

    <script type='text/javascript'>
        var map;
        var infobox;
        observeChanges(window, 'geoJsonData', loadMap);
        function loadMap() {
            map = new Microsoft.Maps.Map(document.getElementById('map'), {
                credentials: 'AkOaQu2DLHmVfkRSMITNik0HozZniajnvTQXRtDJsthVQwzJs8bZPtdEUGraXsHy',
                center: new Microsoft.Maps.Location(52.23, 21),
                zoom: 16
            });
            var geoJsonData = @Html.Raw(Json.Serialize(geoJsonData));
            displayGeoJsonRoute(geoJsonData);
        }

        function displayGeoJsonRoute(geoJsonData) {
            map.entities.clear();

            var coordinates = geoJsonData.features[0].geometry.coordinates.map(function (coord) {
                return new Microsoft.Maps.Location(coord[1], coord[0]);
            });

            var routeLine = new Microsoft.Maps.Polyline(coordinates, {
                strokeColor: 'blue',
                strokeThickness: 8
            });
            map.entities.push(routeLine);
            for (var i = 0; i < geoJsonData.features.length; i++) {
                var geometry = geoJsonData.features[i].geometry;
                var properties = geoJsonData.features[i].properties;

                var location = new Microsoft.Maps.Location(geometry.coordinates[1], geometry.coordinates[0]);
                var marker = new Microsoft.Maps.Pushpin(location, {
                    title: properties.name || '',
                    color: properties.sym === 'Flag, Red' ? 'red' : 'blue'
                });
                var infoboxOptions = {
                    title: properties.name || '',
                    description: 'Time: ' + properties.time + '<br>' +
                        'Description: ' + properties.desc + '<br>' +
                        'Comment: ' + properties.cmt + '<br>' +
                        'Symbol: ' + properties.sym + '<br>' +
                        'Type: ' + properties.type
                };
                var infobox = new Microsoft.Maps.Infobox(location, infoboxOptions);

                map.entities.push(marker);
                map.entities.push(infobox);

                Microsoft.Maps.Events.addHandler(marker, 'mouseover', function (args) {
                    infobox.setOptions({ visible: true });
                });

                Microsoft.Maps.Events.addHandler(marker, 'mouseout', function () {
                    infobox.setOptions({ visible: false });
                });
            }

            var boundingBox = Microsoft.Maps.LocationRect.fromLocations(coordinates);
            map.setView({ bounds: boundingBox });
        }

        window.onload = loadMap;
    </script>
</body>

</html>
